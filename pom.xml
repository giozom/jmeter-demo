<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example</groupId>
  <artifactId>jmeter-demo</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>jmeter-demo</name>
  <url>http://maven.apache.org</url>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.jmeter</groupId>
      <artifactId>ApacheJMeter_core</artifactId>
      <version>3.0</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>com.lazerycode.jmeter</groupId>
        <artifactId>jmeter-maven-plugin</artifactId>
        <version>2.0.3</version>
        <configuration>
          <testResultsTimestamp>false</testResultsTimestamp>
        </configuration>
        <executions>
          <execution>
            <id>jmeter-tests</id>
            <phase>verify</phase>
            <goals>
              <goal>jmeter</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!--<plugin>-->
        <!--<groupId>com.lazerycode.jmeter</groupId>-->
        <!--<artifactId>jmeter-analysis-maven-plugin</artifactId>-->
        <!--<version>1.0.6</version>-->
        <!--<executions>-->
          <!--<execution>-->
            <!--<goals>-->
              <!--<goal>analyze</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
              <!--&lt;!&ndash;-->
              <!--An AntPath-Style pattern matching a JMeter XML result file to analyze. Must be a fully qualified path.-->
              <!--File may be GZiped, must end in .gz then.-->

              <!--Default: not set.-->
              <!--Required.-->
              <!--&ndash;&gt;-->
              <!--<source>${project.build.directory}/**/*.jtl</source>-->

              <!--&lt;!&ndash;-->
              <!--directory where to store analysis result files.-->

              <!--Default: ${project.build.directory}-->
              <!--Required.-->
              <!--&ndash;&gt;-->
              <!--<targetDirectory>${project.build.directory}/target/results</targetDirectory>-->

              <!--&lt;!&ndash;-->
              <!--Build failed if source directory is not found.-->

              <!--Default: true-->
              <!--&ndash;&gt;-->
              <!--<sourceDirFailed>true</sourceDirFailed>-->

              <!--&lt;!&ndash;-->
              <!--Check analysis result files. If threshold is not correct, maven build failed.-->

              <!--Default: not set.-->
              <!--&ndash;&gt;-->
              <!--<checkResult>-->
                <!--&lt;!&ndash; Optional : check throughput. &ndash;&gt;-->
                <!--<throughput>-->
                  <!--&lt;!&ndash; Default: -1 (disabling) &ndash;&gt;-->
                  <!--<threshold>-1</threshold>-->

                  <!--&lt;!&ndash; Default: UPPER_LOWER_TOLERANCE-->
                  <!--Values could be :-->
                  <!--* UPPER :                 minValue = threshold, maxValue = Double.MAX_VALUE-->
                  <!--* LOWER :                 minValue = 0, maxValue = threshold-->
                  <!--* UPPER_TOLERANCE :       minValue = threshold, maxValue = (threshold + (threshold * tolerance / 100))-->
                  <!--* LOWER_TOLERANCE :       minValue = (threshold - (threshold * tolerance / 100)), maxValue = threshold-->
                  <!--* UPPER_LOWER_TOLERANCE : minValue = (threshold - (threshold * tolerance / 100)), maxValue = (threshold + (threshold * tolerance / 100))-->
                  <!--* EQUALS :                minValue = maxValue = threshold-->

                  <!--If throughput result test is between minValue and maxValue, maven build is OK otherwise, build failed.-->
                  <!--&ndash;&gt;-->
                  <!--<toleranceDirection>UPPER_LOWER_TOLERANCE</toleranceDirection>-->

                  <!--&lt;!&ndash; Default: 5 (percent)-->
                  <!--Used for calculate min et max values.-->
                  <!--&ndash;&gt;-->
                  <!--<tolerance>5</tolerance>-->
                <!--</throughput>-->
                <!--&lt;!&ndash; Optional : check percent errors. &ndash;&gt;-->
                <!--<errors>-->
                  <!--&lt;!&ndash; As above &ndash;&gt;-->
                  <!--<threshold>-1</threshold>-->
                  <!--<toleranceDirection>UPPER_LOWER_TOLERANCE</toleranceDirection>-->
                  <!--<tolerance>5</tolerance>-->
                <!--</errors>-->
              <!--</checkResult>-->

              <!--&lt;!&ndash;-->
              <!--Request groups as a mapping from "group name" to "ant pattern".-->
              <!--A request uri that matches an ant pattern will be associated with the group name.-->
              <!--Request details, charts and CSV files are generated per requestGroup.-->

              <!--The order is honored, a sample will be added to the first matching pattern. So it's possible-->
              <!--to define various patterns and one catch all pattern.-->

              <!--If not set, the threadgroup name of the request will be used.-->

              <!--Default: not set.-->
              <!--&ndash;&gt;-->
              <!--<requestGroups>-->
                <!--<requestGroup>-->
                  <!--<name>pages</name>-->
                  <!--<pattern>/page/**</pattern>-->
                  <!--&lt;!&ndash; Optional &ndash;&gt;-->
                  <!--<checkResult>-->
                    <!--&lt;!&ndash; As above &ndash;&gt;-->
                  <!--</checkResult>-->
                <!--</requestGroup>-->
                <!--<requestGroup>-->
                  <!--<name>binaries</name>-->
                  <!--<pattern>/binary/**</pattern>-->
                  <!--&lt;!&ndash; Optional &ndash;&gt;-->
                  <!--<checkResult>-->
                    <!--&lt;!&ndash; As above &ndash;&gt;-->
                  <!--</checkResult>-->
                <!--</requestGroup>-->
              <!--</requestGroups>-->

              <!--&lt;!&ndash;-->
              <!--Change default value for generating charts.-->

              <!--Default: width=950, height=500-->
              <!--&ndash;&gt;-->
              <!--<configurationCharts>-->
                <!--<width>950</width>-->
                <!--<height>500</height>-->
              <!--</configurationCharts>-->

              <!--&lt;!&ndash;-->
              <!--Maximum number of samples to keep (in main memory) before compressing. -1 disabling compression.-->

              <!--Default: 50000-->
              <!--&ndash;&gt;-->
              <!--<maxSamples>50000</maxSamples>-->

              <!--&lt;!&ndash;-->
              <!--If set to true, the directory structure relative to source will be preserved during output.-->

              <!--Default: false-->
              <!--&ndash;&gt;-->
              <!--<preserveDirectories>false</preserveDirectories>-->

              <!--&lt;!&ndash;-->
              <!--Set<String> of sample names that should be processed when analysing a results file.-->

              <!--Default: sample, httpSample-->
              <!--&ndash;&gt;-->
              <!--<sampleNames>-->
                <!--<sampleName>sample</sampleName>-->
                <!--<sampleName>httpSample</sampleName>-->
              <!--</sampleNames>-->

              <!--&lt;!&ndash;-->
              <!--If set to true will process all files found by the pattern defined in <source>.-->
              <!--If set to false (the default) it will only process the first file found.-->

              <!--*SETTING TO TRUE IS NOT RECOMMENDED*-->
              <!--It can substantially impact performance, if you do this you do it at your own risk!-->

              <!--Default: false-->
              <!--&ndash;&gt;-->
              <!--<processAllFilesFound>false</processAllFilesFound>-->

              <!--&lt;!&ndash;-->
              <!--Template directory where custom freemarker templates are stored.-->
              <!--Freemarker templates are used for all generated output. (CSV files, HTML files, console output)-->
              <!--Templates must be stored in one of the following three subfolders of the templateDirectory:-->

              <!--csv, html, text-->

              <!--The entry template must be called "main.ftl".-->

              <!--For example,-->
              <!--templateDirectory/text/main.ftl will be used for generating the console output.-->

              <!--Default: not set.-->
              <!--&ndash;&gt;-->
              <!--<templateDirectory>${project.basedir}/src/main/resources/</templateDirectory>-->

              <!--&lt;!&ndash;-->
              <!--Mapping from resource URL to file name. Every resource will be downloaded and stored in 'targetDirectory'-->
              <!--with the given filename. Tokens "_FROM_" and "_TO_" can be used as placeholders. These placeholders will-->
              <!--be replaced by timestamps of execution interval (formatted as ISO8601, e.g. '20111216T145509+0100').-->

              <!--Default: not set.-->
              <!--&ndash;&gt;-->
              <!--<remoteResources>-->
                <!--<property>-->
                  <!--<name>http://yourhost/path?from=_FROM_&amp;to=_TO_</name>-->
                  <!--<value>my_resource.txt</value>-->
                <!--</property>-->
              <!--</remoteResources>-->

              <!--&lt;!&ndash;-->
              <!--Specify custom date format for resources not supporting ISO8601.-->

              <!--Default IOS8601-->
              <!--&ndash;&gt;-->
              <!--<remoteResourcesFromUntilDateFormat>HH:mm_yyyyMMdd</remoteResourcesFromUntilDateFormat>-->

              <!--&lt;!&ndash;-->
              <!--List of writers that handle all output of the plugin.-->
             <!--Defaults to:-->
             <!--* com.lazerycode.jmeter.analyzer.writer.ChartWriter (generates detailed charts as PNGs),-->
             <!--* com.lazerycode.jmeter.analyzer.writer.DetailsToCsvWriter (generates CSV files for every request group),-->
             <!--* com.lazerycode.jmeter.analyzer.writer.DetailsToHtmlWriter (generates HTML files for every request group),-->
             <!--* com.lazerycode.jmeter.analyzer.writer.HtmlWriter (generates an HTML overview file),-->
             <!--* com.lazerycode.jmeter.analyzer.writer.SummaryTextToFileWriter (generates a TXT overview file),-->
             <!--* com.lazerycode.jmeter.analyzer.writer.SummaryTextToStdOutWriter (generates overview output to stdout)-->

             <!--If one of those should be deactivated or a new com.lazerycode.jmeter.analyzer.writer.Writer implementation should be added,-->
             <!--all desired writers need to be configured!-->
              <!--&ndash;&gt;-->
              <!--&lt;!&ndash;<writers>&ndash;&gt;-->
              <!--&lt;!&ndash;<com.lazerycode.jmeter.analyzer.writer.SummaryTextToStdOutWriter/>&ndash;&gt;-->
              <!--&lt;!&ndash;<com.lazerycode.jmeter.analyzer.writer.SummaryTextToFileWriter/>&ndash;&gt;-->
              <!--&lt;!&ndash;<com.lazerycode.jmeter.analyzer.writer.HtmlWriter/>&ndash;&gt;-->
              <!--&lt;!&ndash;<com.lazerycode.jmeter.analyzer.writer.DetailsToCsvWriter/>&ndash;&gt;-->
              <!--&lt;!&ndash;<com.lazerycode.jmeter.analyzer.writer.DetailsToHtmlWriter/>&ndash;&gt;-->
              <!--&lt;!&ndash;<com.lazerycode.jmeter.analyzer.writer.ChartWriter/>&ndash;&gt;-->
              <!--&lt;!&ndash;</writers>&ndash;&gt;-->

            <!--</configuration>-->
          <!--</execution>-->
        <!--</executions>-->
      <!--</plugin>-->

    </plugins>
  </build>

</project>
